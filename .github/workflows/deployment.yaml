name: Deployment

on: [push]

concurrency:
  group: build_and_push_image

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    environment:
      name: test # run this only in test environment for now
    steps:
      - uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          export_default_credentials: true
      
      # Build docker image
      - name: Build
        run: |-
          docker build -t eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA --build-arg=ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} .
      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker -q

      # Push image to Google Container Registry
      - name: Push
        run: |-
          docker push eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA

  deploy_to_test:
    name: Deploy Test Server to Google Cloud Run
    runs-on: ubuntu-latest
    environment:
      name: test
    needs: [build_and_push_image]
    steps:
      - name: Checkout working branches
        uses: actions/checkout@v2

      # Deploy to Google Cloud Run Serverless
      - name: Get GCP project credential 
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          export_default_credentials: true
      
      # Deploy to Google Cloud Run Serverless
      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy ${{ secrets.SERVICE_NAME }} --image eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA \
          --region europe-west1 \
          --platform managed \
          --allow-unauthenticated \
          --min-instances=${{ secrets.MIN_INST }} \
          --max-instances=${{ secrets.MAX_INST }} \
          --memory=${{ secrets.MEMORY_LIMIT}} \
          --cpu=${{ secrets.CPU }} \
          --set-env-vars "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}" \
          --set-env-vars "FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}" \
          --set-env-vars "JWT_KEY=${{ secrets.JWT_KEY }}" \
          --set-env-vars "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" \
          --set-env-vars "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" \
          --set-env-vars "ROOT_COLLECTION_SUFFIX=${{ secrets.ROOT_COLLECTION_SUFFIX }}" \
          --set-env-vars "CHARGE_MASTER_API_HOST=${{ secrets.CHARGE_MASTER_API_HOST }}" \
          --set-env-vars "CHARGE_MASTER_API_SCHEME=${{ secrets.CHARGE_MASTER_API_SCHEME }}" \
          --set-env-vars "CHARGE_MASTER_TOKEN_URL=${{ secrets.CHARGE_MASTER_TOKEN_URL }}" \
          --set-env-vars "CHARGE_MASTER_CLIENT_ID=${{ secrets.CHARGE_MASTER_CLIENT_ID }}" \
          --set-env-vars "CHARGE_MASTER_CLIENT_SECRET=${{ secrets.CHARGE_MASTER_CLIENT_SECRET }}" \
          --set-env-vars "CHARGE_MASTER_USERNAME=${{ secrets.CHARGE_MASTER_USERNAME }}" \
          --set-env-vars "CHARGE_MASTER_PASSWORD=${{ secrets.CHARGE_MASTER_PASSWORD }}" \
          --set-env-vars "CHARGE_MASTER_GRANT_TYPE=${{ secrets.CHARGE_MASTER_GRANT_TYPE }}" \
          --set-env-vars "REPOSITORY=${{ secrets.REPOSITORY }}" \
          --set-env-vars "SERVICE_HOST=${{ secrets.SERVICE_HOST }}" \
          --set-env-vars "GOOGLE_PROJECT_NUMBER=${{ secrets.GOOGLE_PROJECT_NUMBER }}" \
          --set-env-vars "SAVANNAH_ADMIN_EMAIL=${{ secrets.SAVANNAH_ADMIN_EMAIL }}" \
          --set-env-vars "HUBSPOT_API_KEY=${{ secrets.HUBSPOT_API_KEY }}" \
          --set-env-vars "HUBSPOT_API_URL=${{ secrets.HUBSPOT_API_URL }}" \
          --set-env-vars "JAEGER_URL=${{ secrets.JAEGER_URL }}" \
          --set-env-vars "SCHEMA_HOST=${{ secrets.SCHEMA_HOST }}" \
          --set-env-vars "HOST=${{ secrets.HOST }}" \
          --set-env-vars "API_SCHEME=${{ secrets.API_SCHEME }}" \
          --set-env-vars "TOKEN_URL=${{ secrets.TOKEN_URL }}" \
          --set-env-vars "AUTH_SERVER_DOMAIN=${{ secrets.AUTH_SERVER_DOMAIN }}" \
          --set-env-vars "GRANT_TYPE=${{ secrets.GRANT_TYPE }}" \
          --set-env-vars "USERNAME=${{ secrets.USERNAME }}" \
          --set-env-vars "PASSWORD=${{ secrets.PASSWORD }}" \
          --set-env-vars "CLIENT_ID=${{ secrets.CLIENT_ID }}" \
          --set-env-vars "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" \
          --set-env-vars "AUTH_SERVER_INTROSPECTION_URL=${{ secrets.AUTH_SERVER_INTROSPECTION_URL }}" \
          --set-env-vars "GHOST_CMS_API_ENDPOINT=${{ secrets.GHOST_CMS_API_ENDPOINT }}" \
          --set-env-vars "GHOST_CMS_API_KEY=${{ secrets.GHOST_CMS_API_KEY }}" \
          --set-env-vars "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" \
          --set-env-vars "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" \
          --set-env-vars "MAILGUN_FROM=${{ secrets.MAILGUN_FROM }}" \
          --set-env-vars "SEND_IN_BLUE_API_KEY=${{ secrets.SEND_IN_BLUE_API_KEY }}" \
          --set-env-vars "SEND_IN_BLUE_ENABLED=${{ secrets.SEND_IN_BLUE_ENABLED }}" \
          --set-env-vars "TWILIO_VIDEO_SID=${{ secrets.TWILIO_VIDEO_SID }}" \
          --set-env-vars "TWILIO_VIDEO_SECRET=${{ secrets.TWILIO_VIDEO_SECRET }}" \
          --set-env-vars "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" \
          --set-env-vars "TWILIO_ACCOUNT_AUTH_TOKEN=${{ secrets.TWILIO_ACCOUNT_AUTH_TOKEN }}" \
          --set-env-vars "TWILIO_SMS_NUMBER=${{ secrets.TWILIO_SMS_NUMBER }}" \
          --set-env-vars "TWILIO_MESSAGING_USER=${{ secrets.TWILIO_MESSAGING_USER }}" \
          --set-env-vars "TWILIO_MESSAGING_SERVICE_SID=${{ secrets.TWILIO_MESSAGING_SERVICE_SID }}" \
          --set-env-vars "TWILIO_MESSAGING_AUTH_TOKEN=${{ secrets.TWILIO_MESSAGING_AUTH_TOKEN }}" \
          --set-env-vars "SERVER_PUBLIC_DOMAIN=${{ secrets.SERVER_PUBLIC_DOMAIN }}" \
          --set-env-vars "AIT_API_KEY=${{ secrets.AIT_API_KEY }}" \
          --set-env-vars "AIT_USERNAME=${{ secrets.AIT_USERNAME }}" \
          --set-env-vars "AIT_SENDER_ID=${{ secrets.AIT_SENDER_ID }}" \
          --set-env-vars "AIT_BEWELL_API_KEY=${{ secrets.AIT_BEWELL_API_KEY }}" \
          --set-env-vars "AIT_BEWELL_USERNAME=${{ secrets.AIT_BEWELL_USERNAME }}" \
          --set-env-vars "AIT_BEWELL_SENDER_ID=${{ secrets.AIT_BEWELL_SENDER_ID }}" \
          --set-env-vars "AIT_ENVIRONMENT=${{ secrets.AIT_ENVIRONMENT }}" \
          --set-env-vars "TWILIO_WHATSAPP_SID=${{ secrets.TWILIO_WHATSAPP_SID }}" \
          --set-env-vars "TWILIO_WHATSAPP_AUTH_TOKEN=${{ secrets.TWILIO_WHATSAPP_AUTH_TOKEN }}" \
          --set-env-vars "TWILIO_WHATSAPP_SENDER=${{ secrets.TWILIO_WHATSAPP_SENDER }}" \
          --set-env-vars "TWILIO_REGION=${{ secrets.TWILIO_REGION }}" \
          --set-env-vars "TWILIO_VIDEO_API_URL=${{ secrets.TWILIO_VIDEO_API_URL }}" 
